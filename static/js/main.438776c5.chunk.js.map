{"version":3,"sources":["logo.svg","components/stats-box.js","App.js","reportWebVitals.js","index.js"],"names":["StatsBox","label","number","inc","numAbbr","NumAbbr","className","abbreviate","App","useState","covidData","setCovidData","today","Date","setDate","getDate","startDate","setStartDate","calendarVisible","setCalendarVisible","fetchFromApi","a","fetch","data","json","jsonData","getData","then","console","log","dateVal","dateString","getFullYear","getMonth","slice","getDay","map","date","cases","positive","casesInc","positiveIncrease","deaths","death","deathsInc","deathIncrease","tests","totalTestResults","testsInc","totalTestResultsIncrease","clickDate","useEffect","style","display","selected","onChange","filterDate","inline","onClick","format","xmlns","width","height","viewBox","d","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.438776c5.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import React from 'react';\r\nimport NumAbbr from 'number-abbreviate';\r\n\r\nconst StatsBox = ({ label, number, inc }) => {\r\n  let numAbbr = new NumAbbr();\r\n\r\n  return (\r\n    <div className=\"stats-box\">\r\n      <span className=\"number\" key={number}>\r\n        {number > 1000000 ? numAbbr.abbreviate(number, 2) : number}\r\n      </span>\r\n      <span className=\"label\" key={label}>\r\n        {label}\r\n      </span>\r\n      <span className=\"change\">{inc > 0 ? `+${inc}` : `-${inc}`}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StatsBox;\r\n","import logo from './logo.svg';\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport StatsBox from './components/stats-box.js';\nimport DatePicker from 'react-datepicker';\nimport Moment from 'react-moment';\n\nimport 'react-datepicker/dist/react-datepicker.css';\n\nfunction App() {\n  const [covidData, setCovidData] = useState({});\n  const [startDate, setStartDate] = useState(() => {\n    let today = new Date();\n    return today.setDate(today.getDate() - 1);\n  });\n  const [calendarVisible, setCalendarVisible] = useState(false);\n\n  const fetchFromApi = async () => {\n    const data = await fetch('https://api.covidtracking.com/v1/us/daily.json');\n    const jsonData = await data.json();\n    return jsonData;\n  };\n\n  const getData = async () => {\n    fetchFromApi().then((jsonData) => {\n      // let dateString = jsonData[0].date.toString();\n      // let year = dateString.slice(0, 4);\n      // let month = dateString.slice(4, 6);\n      // let day = dateString.slice(6, 8);\n      // let completeDate = `${month}-${day}-${year}`;\n      // const selectedDate = new Date(completeDate);\n      // console.log(selectedDate);\n      console.log(jsonData);\n      const dateVal = new Date(startDate);\n      const dateString = `${dateVal.getFullYear()}${(\n        '0' +\n        (dateVal.getMonth() + 1)\n      ).slice(-2)}${('0' + dateVal.getDay()).slice(-2)}`;\n\n      jsonData.map((data) => {\n        if (data.date == dateString) {\n          setCovidData({\n            cases: data.positive,\n            casesInc: data.positiveIncrease,\n            deaths: data.death,\n            deathsInc: data.deathIncrease,\n            tests: data.totalTestResults,\n            testsInc: data.totalTestResultsIncrease,\n          });\n        }\n      });\n    });\n  };\n\n  const isValidDate = (date) => {\n    let today = new Date();\n    if (\n      date > new Date('03/07/2020') &&\n      date < today.setDate(today.getDate() - 1)\n    ) {\n      return date;\n    }\n  };\n\n  const clickDate = () => {\n    if (calendarVisible === 'none') {\n      console.log(calendarVisible);\n      setCalendarVisible('block');\n    } else {\n      setCalendarVisible('none');\n    }\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  useEffect(() => {\n    getData();\n  }, [startDate]);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\"></header>\n      <main>\n        <section className=\"header\">\n          <div className=\"header-data\">\n            <h3>United States</h3>\n            <div className=\"header-date\">\n              <div className=\"calendar\" style={{ display: calendarVisible }}>\n                {' '}\n                <DatePicker\n                  selected={startDate}\n                  onChange={(date) => {\n                    setStartDate(date);\n                    clickDate();\n                  }}\n                  filterDate={isValidDate}\n                  inline\n                />\n              </div>\n              As of{' '}\n              <span onClick={clickDate} className=\"date-moment\">\n                <Moment date={startDate} format=\"MMMM Do, YYYY \" />\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width=\"24\"\n                  height=\"24\"\n                  viewBox=\"0 0 24 24\"\n                >\n                  <path d=\"M20 20h-4v-4h4v4zm-6-10h-4v4h4v-4zm6 0h-4v4h4v-4zm-12 6h-4v4h4v-4zm6 0h-4v4h4v-4zm-6-6h-4v4h4v-4zm16-8v22h-24v-22h3v1c0 1.103.897 2 2 2s2-.897 2-2v-1h10v1c0 1.103.897 2 2 2s2-.897 2-2v-1h3zm-2 6h-20v14h20v-14zm-2-7c0-.552-.447-1-1-1s-1 .448-1 1v2c0 .552.447 1 1 1s1-.448 1-1v-2zm-14 2c0 .552-.447 1-1 1s-1-.448-1-1v-2c0-.552.447-1 1-1s1 .448 1 1v2z\" />\n                </svg>\n              </span>\n            </div>\n            <div className=\"header-stats\">\n              <StatsBox\n                label=\"Cases\"\n                number={covidData.cases}\n                inc={covidData.casesInc}\n              />\n              <StatsBox\n                label=\"Deaths\"\n                number={covidData.deaths}\n                inc={covidData.deathsInc}\n              />\n              <StatsBox\n                label=\"Tests\"\n                number={covidData.tests}\n                inc={covidData.testsInc}\n              />\n            </div>\n          </div>\n        </section>\n        <section className=\"body\">Hello</section>\n        <section className=\"footer\"></section>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// ReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}