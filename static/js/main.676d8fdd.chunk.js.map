{"version":3,"sources":["logo.svg","components/stats-box.js","App.js","reportWebVitals.js","index.js"],"names":["StatsBox","label","number","inc","numAbbr","NumAbbr","className","abbreviate","App","useState","covidData","setCovidData","today","Date","setDate","getDate","startDate","setStartDate","calendarVisible","setCalendarVisible","fetchFromApi","a","fetch","data","json","jsonData","getData","then","console","log","dateVal","dateString","getFullYear","getMonth","slice","getDay","obj","casesIncValues","dates","map","date","cases","positive","casesInc","positiveIncrease","deaths","death","deathsInc","deathIncrease","tests","totalTestResults","testsInc","totalTestResultsIncrease","push","toString","year","month","day","completeDate","momentDate","moment","format","reverse","filter","val","clickDate","useEffect","labels","datasets","fill","lineTension","backgroundColor","borderColor","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","style","display","selected","onChange","filterDate","inline","onClick","xmlns","width","height","viewBox","d","options","scales","xAxes","ticks","autoSkip","maxTicksLimit","source","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.676d8fdd.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import React from 'react';\r\nimport NumAbbr from 'number-abbreviate';\r\n\r\nconst StatsBox = ({ label, number, inc }) => {\r\n  let numAbbr = new NumAbbr();\r\n\r\n  return (\r\n    <div className=\"stats-box\">\r\n      <span className=\"number\" key={number}>\r\n        {number > 1000000 ? numAbbr.abbreviate(number, 2) : number}\r\n      </span>\r\n      <span className=\"label\" key={label}>\r\n        {label}\r\n      </span>\r\n      <span className=\"change\">{inc > 0 ? `+${inc}` : `-${inc}`}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StatsBox;\r\n","import logo from './logo.svg';\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport StatsBox from './components/stats-box.js';\nimport DatePicker from 'react-datepicker';\nimport moment from 'moment';\nimport Moment from 'react-moment';\nimport chart, { Line } from 'react-chartjs-2';\n\nimport 'react-datepicker/dist/react-datepicker.css';\n\nfunction App() {\n  const [covidData, setCovidData] = useState({});\n  const [startDate, setStartDate] = useState(() => {\n    let today = new Date();\n    return today.setDate(today.getDate() - 1);\n  });\n  const [calendarVisible, setCalendarVisible] = useState('none');\n\n  const fetchFromApi = async () => {\n    const data = await fetch('https://api.covidtracking.com/v1/us/daily.json');\n    const jsonData = await data.json();\n    return jsonData;\n  };\n\n  const getData = async () => {\n    fetchFromApi().then((jsonData) => {\n      console.log(jsonData);\n      const dateVal = new Date(startDate);\n      const dateString = `${dateVal.getFullYear()}${(\n        '0' +\n        (dateVal.getMonth() + 1)\n      ).slice(-2)}${('0' + dateVal.getDay()).slice(-2)}`;\n\n      let obj = {\n        casesIncValues: [],\n        dates: [],\n      };\n      jsonData.map((data) => {\n        if (data.date == dateString) {\n          obj.cases = data.positive;\n          obj.casesInc = data.positiveIncrease;\n          obj.deaths = data.death;\n          obj.deathsInc = data.deathIncrease;\n          obj.tests = data.totalTestResults;\n          obj.testsInc = data.totalTestResultsIncrease;\n        }\n        if (data.positiveIncrease > 0 && data.date <= dateString) {\n          obj.casesIncValues.push(data.positiveIncrease);\n\n          let dateString = data.date.toString();\n          let year = dateString.slice(0, 4);\n          let month = dateString.slice(4, 6);\n          let day = dateString.slice(6, 8);\n          let completeDate = `${month}-${day}-${year}`;\n          let momentDate = moment().format(completeDate, 'MMMM');\n          obj.dates.push(momentDate);\n        }\n      });\n      obj.casesIncValues = obj.casesIncValues\n        .reverse()\n        .filter((val) => val > 0);\n      obj.dates = obj.dates.reverse();\n\n      setCovidData(obj);\n    });\n  };\n\n  const isValidDate = (date) => {\n    let today = new Date();\n    if (\n      date > new Date('03/07/2020') &&\n      date < today.setDate(today.getDate() - 1)\n    ) {\n      return date;\n    }\n  };\n\n  const clickDate = () => {\n    if (calendarVisible === 'none') {\n      console.log(calendarVisible);\n      setCalendarVisible('block');\n    } else {\n      setCalendarVisible('none');\n    }\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  useEffect(() => {\n    getData();\n  }, [startDate]);\n\n  const data = {\n    labels: covidData.dates,\n    datasets: [\n      {\n        label: 'Number of Cases',\n        fill: true,\n        lineTension: 0.1,\n        backgroundColor: 'rgba(75,192,192,0.4)',\n        borderColor: 'rgba(75,192,192,1)',\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: 'miter',\n        pointBorderColor: 'rgba(75,192,192,1)',\n        pointBackgroundColor: 'rgba(75,192,192,1)',\n        pointBorderWidth: 1,\n        pointHoverRadius: 5,\n        pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n        pointHoverBorderColor: 'rgba(220,220,220,1)',\n        pointHoverBorderWidth: 2,\n        pointRadius: 0,\n        pointHitRadius: 10,\n        data: covidData.casesIncValues,\n      },\n    ],\n  };\n\n  const options = {\n    scales: {\n      xAxes: [\n        {\n          ticks: {\n            display: true,\n            autoSkip: true,\n            maxTicksLimit: 4,\n            source: 'data',\n          },\n        },\n      ],\n    },\n  };\n\n  console.log(covidData.casesIncValues);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\"></header>\n      <main>\n        <section className=\"header\">\n          <div className=\"header-data\">\n            <h3>United States</h3>\n            <div className=\"header-date\">\n              <div className=\"calendar\" style={{ display: calendarVisible }}>\n                {' '}\n                <DatePicker\n                  selected={startDate}\n                  onChange={(date) => {\n                    setStartDate(date);\n                    clickDate();\n                  }}\n                  filterDate={isValidDate}\n                  inline\n                />\n              </div>\n              As of{' '}\n              <span onClick={clickDate} className=\"date-moment\">\n                <Moment date={startDate} format=\"MMMM Do, YYYY \" />\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width=\"24\"\n                  height=\"24\"\n                  viewBox=\"0 0 24 24\"\n                >\n                  <path d=\"M20 20h-4v-4h4v4zm-6-10h-4v4h4v-4zm6 0h-4v4h4v-4zm-12 6h-4v4h4v-4zm6 0h-4v4h4v-4zm-6-6h-4v4h4v-4zm16-8v22h-24v-22h3v1c0 1.103.897 2 2 2s2-.897 2-2v-1h10v1c0 1.103.897 2 2 2s2-.897 2-2v-1h3zm-2 6h-20v14h20v-14zm-2-7c0-.552-.447-1-1-1s-1 .448-1 1v2c0 .552.447 1 1 1s1-.448 1-1v-2zm-14 2c0 .552-.447 1-1 1s-1-.448-1-1v-2c0-.552.447-1 1-1s1 .448 1 1v2z\" />\n                </svg>\n              </span>\n            </div>\n            <div className=\"header-stats\">\n              <StatsBox\n                label=\"Cases\"\n                number={covidData.cases}\n                inc={covidData.casesInc}\n              />\n              <StatsBox\n                label=\"Deaths\"\n                number={covidData.deaths}\n                inc={covidData.deathsInc}\n              />\n              <StatsBox\n                label=\"Tests\"\n                number={covidData.tests}\n                inc={covidData.testsInc}\n              />\n            </div>\n          </div>\n        </section>\n        <section className=\"body\">\n          <div className=\"chart-area\">\n            <h1 className=\"chart-title\">Daily Cases</h1>\n            <Line data={data} options={options} />\n          </div>\n        </section>\n        <section className=\"footer\"></section>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// ReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}